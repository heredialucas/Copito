{"version":3,"sources":["components/Title.js","components/Note.js","components/Notes.js","App.js","reportWebVitals.js","index.js"],"names":["Titulo","props","message","Note","nombre","texto","Notes","useState","note","setNote","newName","setNewName","newText","setNewText","className","map","id","onSubmit","event","preventDefault","noteToAddToState","length","console","log","concat","htmlFor","onChange","target","value","type","name","variant","App","Title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAMeA,MAJf,SAAgBC,GACZ,OAAO,6BAAKA,EAAMC,W,cCHTC,G,MAAO,SAACF,GACjB,OACE,+BACE,4BAAIA,EAAMG,SACV,4BAAIH,EAAMI,aCkEHC,EAhED,WACZ,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KA0BA,OACE,sBAAKC,UAAU,eAAf,UACE,oBAAIA,UAAU,WAAd,SACGN,EAAKO,KAAI,SAACP,GAAD,OACR,cAAC,EAAD,eAAwBA,GAAbA,EAAKQ,SAGpB,uBAAMC,SAvBW,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAmB,CACvBJ,GAAIR,EAAKa,OAAS,EAClBjB,OAAQM,EACRL,MAAOO,GAEQ,KAAZF,GAA8B,KAAZE,IAErBU,QAAQC,IAAIH,GACZX,EAAQD,EAAKgB,OAAOJ,IACpBT,EAAW,IACXE,EAAW,MAWmBC,UAAU,UAAxC,UACE,uBAAOW,QAAQ,SAAf,oBACA,uBACEC,SAlCiB,SAACR,GACxBP,EAAWO,EAAMS,OAAOC,QAkClBA,MAAOlB,EACPmB,KAAK,OACLC,KAAK,WAEP,uBACA,uBAAOL,QAAQ,QAAf,mBACA,uBACEC,SAtCiB,SAACR,GACxBL,EAAWK,EAAMS,OAAOC,QAsClBA,MAAOhB,EACPiB,KAAK,OACLC,KAAK,UAEP,uBACA,wBACEhB,UAAU,YACViB,QAAQ,kBAFV,0BC3BOC,MATf,WACE,OACE,uBAAMlB,UAAU,WAAhB,UACE,cAACmB,EAAD,CAAO/B,QAAQ,YACf,cAAC,EAAD,QCfSgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5949ac27.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Titulo(props) {\r\n    return <h1>{props.message}</h1>\r\n}\r\n\r\nexport default Titulo\r\n","export const Note = (props) => {\r\n    return (\r\n      <li>\r\n        <p>{props.nombre}</p>\r\n        <p>{props.texto}</p>\r\n      </li>\r\n    );\r\n  };","import React from \"react\";\r\nimport \"./Notes.css\";\r\nimport { Note } from \"./Note\";\r\nimport { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Notes = () => {\r\n  const [note, setNote] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newText, setNewText] = useState(\"\");\r\n\r\n  const handleChangeName = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleChangeText = (event) => {\r\n    setNewText(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const noteToAddToState = {\r\n      id: note.length + 1,\r\n      nombre: newName,\r\n      texto: newText,\r\n    }\r\n    if ( newName !== '' && newText !== '' ) {\r\n      \r\n      console.log(noteToAddToState);\r\n      setNote(note.concat(noteToAddToState));\r\n      setNewName(\"\");\r\n      setNewText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"AppContainer\">\r\n      <ol className=\"AppNotas\">\r\n        {note.map((note) => (\r\n          <Note key={note.id} {...note} />\r\n        ))}\r\n      </ol>\r\n      <form onSubmit={handleSubmit} className=\"AppForm\">\r\n        <label htmlFor=\"nombre\">Nombre</label>\r\n        <input\r\n          onChange={handleChangeName}\r\n          value={newName}\r\n          type=\"text\"\r\n          name=\"nombre\"\r\n        ></input>\r\n        <br />\r\n        <label htmlFor=\"texto\">Texto</label>\r\n        <input\r\n          onChange={handleChangeText}\r\n          value={newText}\r\n          type=\"text\"\r\n          name=\"texto\"\r\n        ></input>\r\n        <br />\r\n        <button\r\n          className=\"AppButton\"\r\n          variant=\"outline-warning\"\r\n        >\r\n          Crear\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","import \"./App.css\";\r\nimport Title from \"./components/Title\";\r\nimport Notes from \"./components/Notes\";\r\n\r\n// const notes = [\r\n//   {\r\n//     id: 1,\r\n//     nombre: \"Default\",\r\n//     texto: \"Descripcion Default\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     nombre: \"Default\",\r\n//     texto: \"Descripcion Default\",\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     nombre: \"Default\",\r\n//     texto: \"Descripcion Default\",\r\n//   },\r\n// ];\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <main className=\"App-main\">\r\n      <Title message=\"Notas :\" />\r\n      <Notes/>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}